# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'DangNhap.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import requests 

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(785, 424)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.lbTenEHR = QtWidgets.QLabel(self.centralwidget)
        self.lbTenEHR.setGeometry(QtCore.QRect(280, 30, 241, 61))
        font = QtGui.QFont()
        font.setPointSize(31)
        font.setBold(True)
        font.setWeight(75)
        self.lbTenEHR.setFont(font)
        self.lbTenEHR.setObjectName("lbTenEHR")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(290, 180, 91, 17))
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(290, 230, 91, 17))
        self.label_3.setObjectName("label_3")
        self.tbTaiKhoan = QtWidgets.QLineEdit(self.centralwidget)
        self.tbTaiKhoan.setGeometry(QtCore.QRect(390, 180, 113, 25))
        self.tbTaiKhoan.setObjectName("tbTaiKhoan")
        self.tbMatKhau = QtWidgets.QLineEdit(self.centralwidget)
        self.tbMatKhau.setGeometry(QtCore.QRect(390, 230, 113, 25))
        self.tbMatKhau.setObjectName("tbMatKhau")
        self.tbMatKhau.setEchoMode(QtWidgets.QLineEdit.Password)  # Thiết lập chế độ ẩn mật khẩu
        self.btDangNhap = QtWidgets.QPushButton(self.centralwidget)
        self.btDangNhap.setGeometry(QtCore.QRect(530, 230, 101, 25))
        self.btDangNhap.setObjectName("btDangNhap")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(240, 100, 351, 31))
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.btDoiMatKhau = QtWidgets.QPushButton(self.centralwidget)
        self.btDoiMatKhau.setGeometry(QtCore.QRect(390, 320, 101, 25))
        self.btDoiMatKhau.setObjectName("btDoiMatKhau")
        self.lbDoiMatKhau = QtWidgets.QLabel(self.centralwidget)
        self.lbDoiMatKhau.setGeometry(QtCore.QRect(160, 280, 201, 17))
        self.lbDoiMatKhau.setObjectName("lbDoiMatKhau")
        self.tbEmail = QtWidgets.QLineEdit(self.centralwidget)
        self.tbEmail.setGeometry(QtCore.QRect(390, 280, 151, 25))
        self.tbEmail.setObjectName("tbEmail")
        self.tbStatus = QtWidgets.QTextBrowser(self.centralwidget)
        self.tbStatus.setGeometry(QtCore.QRect(180, 310, 171, 61))
        self.tbStatus.setObjectName("tbStatus")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 785, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        # Định nghĩa các hàm sự kiện dưới đây 
        self.btDoiMatKhau.clicked.connect(self.SendEmail)
        self.btDangNhap.clicked.connect(self.Login)  

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "DangNhap"))
        self.lbTenEHR.setText(_translate("MainWindow", "EHR System"))
        self.label_2.setText(_translate("MainWindow", "Tài khoản"))
        self.label_3.setText(_translate("MainWindow", "Mật khẩu"))
        self.btDangNhap.setText(_translate("MainWindow", "Đăng nhập"))
        self.label.setText(_translate("MainWindow", "Hệ thống quản lý hồ sơ y tế điện tử"))
        self.btDoiMatKhau.setText(_translate("MainWindow", "Đổi password"))
        self.lbDoiMatKhau.setText(_translate("MainWindow", "Nhập email để đổi mật khẩu"))

    # Định nghĩa các hàm thêm dưới đây 
    def SendEmail(self):
        # Lấy email từ trường tbEmail
        email = self.tbEmail.text().strip()
        
        # Kiểm tra email có được nhập không
        if not email:
            self.tbStatus.setText("Vui lòng nhập email!")
            return
        
        # Gọi API gửi yêu cầu đặt lại mật khẩu
        base_url = "http://localhost:5000/api"
        try:
            response = requests.post(
                f"{base_url}/users/forgot-password", 
                json={"email": email}
            )
            
            # Hiển thị kết quả lên tbStatus
            if response.status_code == 200:
                message = response.json().get('message', 'Đã gửi email đặt lại mật khẩu!')
                self.tbStatus.setText(f"Thành công: {message}")
            else:
                error_message = response.json().get('message', 'Lỗi không xác định')
                self.tbStatus.setText(f"Lỗi: {error_message}")
                
        except Exception as e:
            # Xử lý các lỗi khi gọi API
            self.tbStatus.setText(f"Lỗi kết nối: {str(e)}")
            
    def Login(self):
        # Lấy username và password từ trường nhập liệu
        username = self.tbTaiKhoan.text().strip()
        password = self.tbMatKhau.text().strip()
        
        # Kiểm tra xem đã nhập username và password chưa
        if not username or not password:
            self.tbStatus.setText("Vui lòng nhập đầy đủ tài khoản và mật khẩu!")
            return
        
        # Gọi API đăng nhập
        base_url = "http://localhost:5000/api"
        try:
            response = requests.post(
                f"{base_url}/users/login", 
                json={
                    "username": username,
                    "password": password
                }
            )
            
            # Xử lý phản hồi từ API
            if response.status_code == 200:
                data = response.json()
                token = data.get("token")
                user_info = data.get("user")
                
                # Chuyển sang trang Home và truyền token
                self.openHomePage(token, user_info)
            else:
                # Hiển thị thông báo lỗi
                error_message = response.json().get('message', 'Lỗi đăng nhập không xác định')
                self.tbStatus.setText(f"Lỗi: {error_message}")
                
        except Exception as e:
            # Xử lý các lỗi kết nối
            self.tbStatus.setText(f"Lỗi kết nối: {str(e)}")
    
    def openHomePage(self, token, user_info):
        """Mở trang Home và truyền token"""
        try:
            # Import trang Home
            from Home import Ui_mainWindow
            
            # Lưu lại MainWindow hiện tại để đóng sau khi mở Home
            login_window = self.centralwidget.window()
            self.home_window = QtWidgets.QMainWindow()
            self.home_ui = Ui_mainWindow()
            self.home_ui.setupUi(self.home_window)
            
            # Lưu token vào biến instance mới của Ui_mainWindow
            self.home_ui.token = token
            self.home_ui.user_info = user_info
            
            # Lưu tham chiếu đến cửa sổ đăng nhập trong cửa sổ Home
            # để có thể quay lại sau khi đăng xuất
            self.home_window.parent_login_window = login_window
            
            # Thiết lập hành động cho nút đăng xuất
            self.setupHomePageActions()
            
            # Hiển thị trang Home
            self.home_window.show()
            
            # Ẩn cửa sổ đăng nhập hiện tại
            login_window.hide()  # Ẩn thay vì đóng để tránh mất giao diện khi thoát Home
            
        except Exception as e:
            self.tbStatus.setText(f"Lỗi khi mở trang chủ: {str(e)}")
    
    def setupHomePageActions(self):
        """Thiết lập các hành động cho Home page"""
        if hasattr(self, 'home_ui'):
            # Thiết lập hành động đăng xuất
            self.home_ui.btDangXuat.clicked.connect(self.logout)
    
    def logout(self):
        """Đăng xuất và quay lại màn hình đăng nhập"""
        if hasattr(self, 'home_window'):
            self.home_window.close()
            main_window = self.centralwidget.window()
            main_window.show()
            
    # Các hàm getPatientsList và getPatientDetail đã được chuyển qua Home.py
if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
